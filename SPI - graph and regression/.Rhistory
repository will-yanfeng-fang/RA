mutate(Y_diff = Y - lag(Y),
X_diff = X - lag(X)) %>%
drop_na()
FD_model_mc <- lm(Y_diff ~ X_diff, data = data_mc_FD)
FD_estimates[rep] <- coef(FD_model_mc)["X_diff"]
}
#Compute variances
var_WG <- var(WG_estimates)
var_FD <- var(FD_estimates)
#Output results
cat("Beta_WG:", beta_WG, "\n")
cat("Beta_FD:", beta_FD, "\n")
cat("Variance_WG:", var_WG, "\n")
cat("Variance_FD:", var_FD, "\n")
#Same process as part i, set the seeds and parameters
set.seed(527)
beta <- 0.7
rho <- 0.7
n <- 527 #Same as part i
T <- 3   #Same as part i, but capitalized to show this is part iii
#We do not specific the number of rows to be exactly 527, but n
#Similarly, the number of columns is T not 3
#But, recall that we value n and T exactly the same
v <- matrix(rnorm(n*T), nrow = n, ncol = T)
u <- matrix(rnorm(n*T), nrow = n, ncol = T)
X <- matrix(0, nrow = n, ncol = T)
Y <- matrix(0, nrow = n, ncol = T)
alpha <- tan(rnorm(n))
#Set t=1 to be the starting point, and if not, iterate it
for (t in 1:T) {
if (t == 1) {
X[, t] <- v[, t]
} else {
X[, t] <- rho*X[, t-1] + v[, t]
}
Y[, t] <- beta*X[, t] + alpha + u[, t]
}
#Modify the format, and name it data_iii as it's part iii
data_iii <- data.frame(
Y = as.vector(Y),
X = as.vector(X),
t = rep(1:T, each = n),
i = rep(1:n, times = T)
)
#Filter data_iii for t = 2, 3
data_filtered <- data_iii %>% filter(t %in% c(2, 3))
#Same within group estimator process
data_WG <- pdata.frame(data_filtered, index = c("i", "t"))
WG_model <- plm(Y ~ X, data = data_WG, model = "within")
beta_WG <- coef(WG_model)["X"]
#Same first differencing estimator process
data_FD <- data_iii %>%
group_by(i) %>%
arrange(t) %>%
mutate(Y_diff = Y - lag(Y),
X_diff = X - lag(X)) %>%
drop_na() #Get rid of the NaNs
FD_model <- lm(Y_diff ~ X_diff, data = data_FD)
beta_FD <- coef(FD_model)["X_diff"]
#Monte Carlo Simulation
mc_replications <- 10^3
WG_estimates <- numeric(mc_replications)
FD_estimates <- numeric(mc_replications)
for (rep in 1:mc_replications) {
#Regenerate the same data
v <- matrix(rnorm(n*T), nrow = n, ncol = T)
u <- matrix(rnorm(n*T), nrow = n, ncol = T)
X <- matrix(0, nrow = n, ncol = T)
Y <- matrix(0, nrow = n, ncol = T)
for (t in 1:T) {
if (t == 1) {
X[, t] <- v[, t]
} else {
X[, t] <- rho * X[, t-1] + v[, t]
}
Y[, t] <- beta * X[, t] + alpha + u[, t]
}
#Modify the format, and name as data_mc for monte carlo
data_mc <- data.frame(
Y = as.vector(Y),
X = as.vector(X),
t = rep(1:T, each = n),
i = rep(1:n, times = T)
)
#WG Estimation
data_mc_WG <- pdata.frame(data_mc, index = c("i", "t"))
WG_model_mc <- plm(Y ~ X, data = data_mc_WG, model = "within")
WG_estimates[rep] <- coef(WG_model_mc)["X"]
#FD Estimation
data_mc_FD <- data_mc %>%
group_by(i) %>%
arrange(t) %>%
mutate(Y_diff = Y - lag(Y),
X_diff = X - lag(X)) %>%
drop_na()
FD_model_mc <- lm(Y_diff ~ X_diff, data = data_mc_FD)
FD_estimates[rep] <- coef(FD_model_mc)["X_diff"]
}
#Compute variances
var_WG <- var(WG_estimates)
var_FD <- var(FD_estimates)
#Output results
cat("Beta_WG:", beta_WG, "\n")
cat("Beta_FD:", beta_FD, "\n")
cat("Variance_WG:", var_WG, "\n")
cat("Variance_FD:", var_FD, "\n")
$$We can see that$Var(WG) = 0.014 \xrightarrow{p} 0 with high possibility (or closer, easier) than Var(FD) = 0.0019$$.
library(haven)
data <- read_sav("/Users/fangxiaoling/Documents/Nathan Nunn RA/Survey/Representative Data/gender Q3/Mar20 19th Amendment_cleaned dataset.sav")
write_dta(data, "/Users/fangxiaoling/Documents/Nathan Nunn RA/Survey/Representative Data/gender Q3/Mar20_cleaned.dta")
library(haven)
# Read the .sav file
data <- read_sav("/Users/fangxiaoling/Documents/Nathan Nunn RA/Survey/Representative Data/gender Q5/ATP W20.sav")
# Save as .dta file (Stata format)
write_dta(data, "/Users/fangxiaoling/Documents/Nathan Nunn RA/Survey/Representative Data/gender Q5/ATP_W20.dta")
# ---- setup ----
# Run once if needed:
# install.packages(c("tidyverse", "readxl", "ggrepel"))
library(tidyverse)
library(readxl)
library(ggrepel)
# ---- setup ----
# Run once if needed:
install.packages(c("tidyverse", "readxl", "ggrepel"))
library(tidyverse)
library(readxl)
library(ggrepel)
install.packages(c("tidyverse", "readxl", "ggrepel"))
library(tidyverse)
library(readxl)
library(ggrepel)
setwd("/Users/fangxiaoling/Documents/Nathan Nunn RA/Book/SPI - graph and regression/")
# 1) Load the Excel file --------------------------------------
df <- read_excel("social-progress-index-by-country-2025.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(
spi = SPI_2025,
gdp = GDPpc_USD_2025
)
# 1) Load the Excel file --------------------------------------
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(
spi = SPI_2025,
gdp = GDPpc_USD_2025
)
# 1) Load the Excel file --------------------------------------
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(
spi = SPI_2025,
gdp = GDPpc_USD_2025
)
# 2) Scatter with labels --------------------------------------
p_scatter <- ggplot(df, aes(x = gdp, y = spi, label = country)) +
geom_point(alpha = 0.6, size = 2) +
geom_text_repel(size = 3, max.overlaps = 1000) +
labs(
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)",
title = "GDP per capita vs Social Progress (2025)"
) +
theme_minimal(base_size = 12)
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 8, height = 6, dpi = 300)
# 3) Scatter + regression line --------------------------------
p_with_fit <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.8)
ggsave("scatter_gdp_spi_2025_with_fit.png", p_with_fit, width = 8, height = 6, dpi = 300)
# --- Optional: log x-axis if GDP is very skewed ---
# p_scatter + scale_x_log10(labels = scales::label_number_si())
# p_with_fit + scale_x_log10(labels = scales::label_number_si())
# ---- setup ----
# Run once if needed:
# install.packages(c("tidyverse", "readxl", "ggrepel"))
install.package("scales")
install.packages(c("scales"))  # run once
install.packages(c("scales"))
install.packages(c("scales"))
install.packages(c("scales"))
library(scales)
setwd("/Users/fangxiaoling/Documents/Nathan Nunn RA/Book/SPI - graph and regression/")
# 1) Load data
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(spi = SPI_2025, gdp = GDPpc_USD_2025) |>
mutate(
gdp = as.numeric(gdp),
spi = as.numeric(spi)
) |>
filter(!is.na(country), !is.na(gdp), !is.na(spi))
# 1) Load data
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(spi = SPI_2025, gdp = GDPpc_USD_2025) |>
mutate(
gdp = as.numeric(gdp),
spi = as.numeric(spi)
) |>
filter(!is.na(country), !is.na(gdp), !is.na(spi))
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(spi = SPI_2025, gdp = GDPpc_USD_2025) |>
mutate(
gdp = as.numeric(gdp),
spi = as.numeric(spi)
) |>
filter(!is.na(country), !is.na(gdp), !is.na(spi))
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
library(tidyverse)
library(readxl)
library(ggrepel)
library(scales)
setwd("/Users/fangxiaoling/Documents/Nathan Nunn RA/Book/SPI - graph and regression/")
# 1) Load data
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(spi = SPI_2025, gdp = GDPpc_USD_2025) |>
mutate(
gdp = as.numeric(gdp),
spi = as.numeric(spi)
) |>
filter(!is.na(country), !is.na(gdp), !is.na(spi))
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
# ---- setup ----
install.packages(c("tidyverse", "readxl", "ggrepel", "scales"))  # run once
library(tidyverse)
library(readxl)
library(ggrepel)
library(scales)
install.packages(c("tidyverse", "readxl", "ggrepel", "scales"))
library(tidyverse)
library(readxl)
library(ggrepel)
library(scales)
setwd("/Users/fangxiaoling/Documents/Nathan Nunn RA/Book/SPI - graph and regression/")
# 1) Load data
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(spi = SPI_2025, gdp = GDPpc_USD_2025) |>
mutate(
gdp = as.numeric(gdp),
spi = as.numeric(spi)
) |>
filter(!is.na(country), !is.na(gdp), !is.na(spi))
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 8, height = 6, dpi = 300)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 8, height = 6, dpi = 300)
# 3B) (Optional) Curved trend like the official figure (LOESS)
p_with_loess <- ggplot(df, aes(gdp, spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
geom_smooth(method = "loess", se = FALSE, linewidth = 1) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025_loess.png", p_with_loess, width = 8, height = 6, dpi = 300)
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 80, height = 60, dpi = 300)
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 80, height = 60, dpi = 300, limitsize = FALSE)
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 18, dpi = 300, limitsize = FALSE)
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 8, height = 18, dpi = 300, limitsize = FALSE)
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 16, height = 18, dpi = 300, limitsize = FALSE)
setwd("/Users/fangxiaoling/Documents/Nathan Nunn RA/Book/SPI - graph and regression/")
# 1) Load data
df <- read_excel("data.xlsx") |>
select(code, country, SPI_2025, GDPpc_USD_2025) |>
rename(spi = SPI_2025, gdp = GDPpc_USD_2025) |>
mutate(
gdp = as.numeric(gdp),
spi = as.numeric(spi)
) |>
filter(!is.na(country), !is.na(gdp), !is.na(spi))
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 16, height = 18, dpi = 300, limitsize = FALSE)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 16, height = 18, dpi = 300, limitsize = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 16, height = 12, dpi = 300, limitsize = FALSE)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9, fullrange = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 16, height = 18, dpi = 300, limitsize = FALSE)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9) +
coord_cartesian(xlim = c(0, 120000))
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 16, height = 18, dpi = 300, limitsize = FALSE)
p_with_loess <- p_scatter +
geom_smooth(method = "loess", se = FALSE, linewidth = 1)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 16, height = 18, dpi = 300, limitsize = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 24, height = 18, dpi = 300, limitsize = FALSE)
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 24, dpi = 300, limitsize = FALSE)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9, fullrange = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 24, height = 24, dpi = 300, limitsize = FALSE)
# 2) Axis settings: ticks every 20k (x) and every 10 SPI (y)
x_breaks <- seq(0, max(df$gdp, na.rm = TRUE) |> ceiling() |> max(120000), by = 20000)
y_breaks <- seq(floor(min(df$spi, na.rm = TRUE)/10)*10,
ceiling(max(df$spi, na.rm = TRUE)/10)*10, by = 10)
# helper for 0K, 20K, ... labeling
label_k <- function(x) paste0(comma(x/1000), "K")
# 3) Base scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.85, size = 2) +
geom_text_repel(aes(label = country),
size = 3, max.overlaps = 80, box.padding = 0.3, point.padding = 0.2) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (in USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(breaks = x_breaks, labels = label_k, expand = expansion(mult = c(0.02, 0.06))) +
scale_y_continuous(breaks = y_breaks, expand = expansion(mult = c(0.02, 0.06))) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(face = "bold", size = 16),
panel.grid.minor = element_blank()
) +
# Keep the axis *scale* ratio: 20k GDP on x equals 10 SPI on y  -> ratio = 10/20000 = 0.0005
coord_fixed(ratio = 0.0005)
# Save (use a rectangular canvas like the official chart)
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 10, height = 7.5, dpi = 300)
# 4) Scatter + linear regression line (your assignment asks for this)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9, fullrange = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 10, height = 7.5, dpi = 300)
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 24, dpi = 300, limitsize = FALSE)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9, fullrange = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 24, height = 24, dpi = 300, limitsize = FALSE)
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 18, dpi = 300, limitsize = FALSE)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9, fullrange = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 24, height = 18, dpi = 300, limitsize = FALSE)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
scale_y_continuous(breaks = y_breaks, limits = c(0, 100), expand = c(0, 0)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 18, dpi = 300, limitsize = FALSE)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
scale_y_continuous(breaks = y_breaks, limits = c(25, 100), expand = c(0, 0)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 18, dpi = 300, limitsize = FALSE)
x_breaks <- seq(0, 120000, by = 20000)
y_breaks <- seq(0, 100, by = 10)
scale_axes <- list(
scale_x_continuous(breaks = x_breaks, labels = label_k, limits = c(0, 120000)),
scale_y_continuous(breaks = y_breaks, limits = c(0, 100)),
coord_fixed(ratio = 0.0005)
)
# 2) Scatter with labels (no fit line)
p_scatter <- ggplot(df, aes(x = gdp, y = spi)) +
geom_point(alpha = 0.8, size = 2) +
geom_text_repel(aes(label = country), size = 3, max.overlaps = 60, box.padding = 0.3) +
labs(
title = "GDP vs Social Progress Index (2025)",
x = "GDP per capita (2025, USD)",
y = "Social Progress Index (2025)"
) +
scale_x_continuous(labels = label_dollar(scale = 1, suffix = "", accuracy = 1),
breaks = pretty_breaks(8)) +
scale_y_continuous(breaks = y_breaks, limits = c(25, 100), expand = c(0, 0)) +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(face = "bold", size = 16))
ggsave("scatter_gdp_spi_2025.png", p_scatter, width = 24, height = 18, dpi = 300, limitsize = FALSE)
# 3A) Scatter + linear regression line (what your assignment asks)
p_with_lm <- p_scatter +
geom_smooth(method = "lm", se = TRUE, linewidth = 0.9, fullrange = FALSE)
ggsave("scatter_gdp_spi_2025_lm.png", p_with_lm, width = 24, height = 18, dpi = 300, limitsize = FALSE)
